{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=()=>{const[repos,setRepos]=useState([]);const[selectedRepos,setSelectedRepos]=useState([]);const navigate=useNavigate();useEffect(()=>{// Fetch repositories on load\nfetch(\"/repos\").then(response=>response.json()).then(data=>setRepos(data.repos)).catch(error=>console.error(\"Error fetching repos:\",error));},[]);const handleSelection=repo=>{setSelectedRepos(prev=>prev.includes(repo)?prev.filter(r=>r!==repo):[...prev,repo]);};const handleClone=()=>{fetch(\"/clone-repos\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({repos:selectedRepos})}).then(response=>response.json()).then(()=>navigate(\"/chat\")).catch(error=>console.error(\"Error cloning repos:\",error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"homepage\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Choose Repositories to Clone\"}),/*#__PURE__*/_jsx(\"ul\",{children:repos.map(repo=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:repo,onChange:()=>handleSelection(repo)}),repo]})},repo))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClone,disabled:selectedRepos.length===0,children:\"Clone Selected Repos\"})]});};export default HomePage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","HomePage","repos","setRepos","selectedRepos","setSelectedRepos","navigate","fetch","then","response","json","data","catch","error","console","handleSelection","repo","prev","includes","filter","r","handleClone","method","headers","body","JSON","stringify","className","children","map","type","value","onChange","onClick","disabled","length"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n    const [repos, setRepos] = useState([]);\r\n    const [selectedRepos, setSelectedRepos] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Fetch repositories on load\r\n        fetch(\"/repos\")\r\n            .then((response) => response.json())\r\n            .then((data) => setRepos(data.repos))\r\n            .catch((error) => console.error(\"Error fetching repos:\", error));\r\n    }, []);\r\n\r\n    const handleSelection = (repo) => {\r\n        setSelectedRepos((prev) =>\r\n            prev.includes(repo) ? prev.filter((r) => r !== repo) : [...prev, repo]\r\n        );\r\n    };\r\n\r\n    const handleClone = () => {\r\n        fetch(\"/clone-repos\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ repos: selectedRepos }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then(() => navigate(\"/chat\"))\r\n            .catch((error) => console.error(\"Error cloning repos:\", error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <h1>Choose Repositories to Clone</h1>\r\n            <ul>\r\n                {repos.map((repo) => (\r\n                    <li key={repo}>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value={repo}\r\n                                onChange={() => handleSelection(repo)}\r\n                            />\r\n                            {repo}\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={handleClone} disabled={selectedRepos.length === 0}>\r\n                Clone Selected Repos\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAAY,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACZ;AACAY,KAAK,CAAC,QAAQ,CAAC,CACVC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAKR,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC,CAAC,CACpCU,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAC,CACxE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,eAAe,CAAIC,IAAI,EAAK,CAC9BX,gBAAgB,CAAEY,IAAI,EAClBA,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAGC,IAAI,CAACE,MAAM,CAAEC,CAAC,EAAKA,CAAC,GAAKJ,IAAI,CAAC,CAAG,CAAC,GAAGC,IAAI,CAAED,IAAI,CACzE,CAAC,CACL,CAAC,CAED,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACtBd,KAAK,CAAC,cAAc,CAAE,CAClBe,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAExB,KAAK,CAAEE,aAAc,CAAC,CACjD,CAAC,CAAC,CACGI,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAC,IAAMF,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC7BM,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,CACvE,CAAC,CAED,mBACIb,KAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB9B,IAAA,OAAA8B,QAAA,CAAI,8BAA4B,CAAI,CAAC,cACrC9B,IAAA,OAAA8B,QAAA,CACK1B,KAAK,CAAC2B,GAAG,CAAEb,IAAI,eACZlB,IAAA,OAAA8B,QAAA,cACI5B,KAAA,UAAA4B,QAAA,eACI9B,IAAA,UACIgC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEf,IAAK,CACZgB,QAAQ,CAAEA,CAAA,GAAMjB,eAAe,CAACC,IAAI,CAAE,CACzC,CAAC,CACDA,IAAI,EACF,CAAC,EARHA,IASL,CACP,CAAC,CACF,CAAC,cACLlB,IAAA,WAAQmC,OAAO,CAAEZ,WAAY,CAACa,QAAQ,CAAE9B,aAAa,CAAC+B,MAAM,GAAK,CAAE,CAAAP,QAAA,CAAC,sBAEpE,CAAQ,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAA3B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}