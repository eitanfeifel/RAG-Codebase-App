{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Routes,Route}from\"react-router-dom\";import HomePage from\"./HomePage\";import ChatPage from\"./ChatPage\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[repos,setRepos]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{fetch(\"/check-auth\").then(res=>res.json()).then(data=>setIsAuthenticated(data.isAuthenticated)).catch(err=>console.error(\"Error checking auth:\",err));},[]);return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{isAuthenticated:isAuthenticated,handleCloneRepos:()=>console.log(\"Clone repos!\")})}),/*#__PURE__*/_jsx(Route,{path:\"/chat\",element:/*#__PURE__*/_jsx(ChatPage,{repos:repos})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","HomePage","ChatPage","jsx","_jsx","jsxs","_jsxs","App","repos","setRepos","isAuthenticated","setIsAuthenticated","fetch","then","res","json","data","catch","err","console","error","children","path","element","handleCloneRepos","log"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\nimport ChatPage from \"./ChatPage\";\n\nfunction App() {\n    const [repos, setRepos] = useState([]);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        fetch(\"/check-auth\")\n            .then((res) => res.json())\n            .then((data) => setIsAuthenticated(data.isAuthenticated))\n            .catch((err) => console.error(\"Error checking auth:\", err));\n    }, []);\n\n    return (\n        <Routes>\n            <Route\n                path=\"/\"\n                element={\n                    <HomePage\n                        isAuthenticated={isAuthenticated}\n                        handleCloneRepos={() => console.log(\"Clone repos!\")}\n                    />\n                }\n            />\n            <Route path=\"/chat\" element={<ChatPage repos={repos} />} />\n        </Routes>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACZc,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,kBAAkB,CAACK,IAAI,CAACN,eAAe,CAAC,CAAC,CACxDO,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEF,GAAG,CAAC,CAAC,CACnE,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIZ,KAAA,CAACP,MAAM,EAAAsB,QAAA,eACHjB,IAAA,CAACJ,KAAK,EACFsB,IAAI,CAAC,GAAG,CACRC,OAAO,cACHnB,IAAA,CAACH,QAAQ,EACLS,eAAe,CAAEA,eAAgB,CACjCc,gBAAgB,CAAEA,CAAA,GAAML,OAAO,CAACM,GAAG,CAAC,cAAc,CAAE,CACvD,CACJ,CACJ,CAAC,cACFrB,IAAA,CAACJ,KAAK,EAACsB,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEnB,IAAA,CAACF,QAAQ,EAACM,KAAK,CAAEA,KAAM,CAAE,CAAE,CAAE,CAAC,EACvD,CAAC,CAEjB,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}