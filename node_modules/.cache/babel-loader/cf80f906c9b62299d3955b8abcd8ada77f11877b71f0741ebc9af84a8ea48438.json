{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import SideBar from\"../components/SideBar\";import ChatWindow from\"../components/ChatWindow\";import\"./ChatPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(){const[repos,setRepos]=useState([]);// Cloned repos for sidebar\nconst[currentRepo,setCurrentRepo]=useState(null);// Active chat repo\nconst[availableRepos,setAvailableRepos]=useState([]);// Repos available to clone\nconst[isCloneMenuVisible,setCloneMenuVisible]=useState(false);// Toggle clone menu visibility\n// Fetch available repos when Clone Repo button is clicked\nuseEffect(()=>{if(isCloneMenuVisible){fetch(\"/repos\").then(response=>response.json()).then(data=>setAvailableRepos(data)).catch(error=>console.error(\"Error fetching repos:\",error));}},[isCloneMenuVisible]);const handleRepoSelect=repo=>{setCurrentRepo(repo);// Set the repo as active for chat\n};const handleCloneRepo=async repoUrl=>{try{const response=await fetch(\"/embed\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({repo_url:repoUrl})});if(response.ok){const clonedRepo=repoUrl.split(\"/\").pop().replace(\".git\",\"\");// Extract repo name\nsetRepos(prevRepos=>[...prevRepos,clonedRepo]);// Add cloned repo to sidebar\nsetCloneMenuVisible(false);// Hide clone menu\n}else{console.error(\"Failed to clone repository\");}}catch(error){console.error(\"Error cloning repository:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsx(SideBar,{repos:repos,onRepoSelect:handleRepoSelect}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:currentRepo?/*#__PURE__*/_jsx(ChatWindow,{activeRepo:currentRepo}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a repository to start chatting\"})}),isCloneMenuVisible&&/*#__PURE__*/_jsxs(\"div\",{className:\"clone-menu\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Available Repositories\"}),/*#__PURE__*/_jsx(\"ul\",{children:availableRepos.map((repoUrl,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[repoUrl.split(\"/\").pop().replace(\".git\",\"\"),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCloneRepo(repoUrl),children:\"Clone\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCloneMenuVisible(false),children:\"Close\"})]}),!isCloneMenuVisible&&/*#__PURE__*/_jsx(\"button\",{className:\"clone-repo-button\",onClick:()=>setCloneMenuVisible(true),children:\"Clone Repo\"})]});}export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","SideBar","ChatWindow","jsx","_jsx","jsxs","_jsxs","ChatPage","repos","setRepos","currentRepo","setCurrentRepo","availableRepos","setAvailableRepos","isCloneMenuVisible","setCloneMenuVisible","fetch","then","response","json","data","catch","error","console","handleRepoSelect","repo","handleCloneRepo","repoUrl","method","headers","body","JSON","stringify","repo_url","ok","clonedRepo","split","pop","replace","prevRepos","className","children","onRepoSelect","activeRepo","map","index","onClick"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport ChatWindow from \"../components/ChatWindow\";\r\nimport \"./ChatPage.css\";\r\n\r\nfunction ChatPage() {\r\n    const [repos, setRepos] = useState([]); // Cloned repos for sidebar\r\n    const [currentRepo, setCurrentRepo] = useState(null); // Active chat repo\r\n    const [availableRepos, setAvailableRepos] = useState([]); // Repos available to clone\r\n    const [isCloneMenuVisible, setCloneMenuVisible] = useState(false); // Toggle clone menu visibility\r\n\r\n    // Fetch available repos when Clone Repo button is clicked\r\n    useEffect(() => {\r\n        if (isCloneMenuVisible) {\r\n            fetch(\"/repos\")\r\n                .then((response) => response.json())\r\n                .then((data) => setAvailableRepos(data))\r\n                .catch((error) => console.error(\"Error fetching repos:\", error));\r\n        }\r\n    }, [isCloneMenuVisible]);\r\n\r\n    const handleRepoSelect = (repo) => {\r\n        setCurrentRepo(repo); // Set the repo as active for chat\r\n    };\r\n\r\n    const handleCloneRepo = async (repoUrl) => {\r\n        try {\r\n            const response = await fetch(\"/embed\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ repo_url: repoUrl }),\r\n            });\r\n            if (response.ok) {\r\n                const clonedRepo = repoUrl.split(\"/\").pop().replace(\".git\", \"\"); // Extract repo name\r\n                setRepos((prevRepos) => [...prevRepos, clonedRepo]); // Add cloned repo to sidebar\r\n                setCloneMenuVisible(false); // Hide clone menu\r\n            } else {\r\n                console.error(\"Failed to clone repository\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error cloning repository:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-page\">\r\n            <SideBar repos={repos} onRepoSelect={handleRepoSelect} />\r\n            <div className=\"chat-window\">\r\n                {currentRepo ? (\r\n                    <ChatWindow activeRepo={currentRepo} />\r\n                ) : (\r\n                    <p>Select a repository to start chatting</p>\r\n                )}\r\n            </div>\r\n            {isCloneMenuVisible && (\r\n                <div className=\"clone-menu\">\r\n                    <h4>Available Repositories</h4>\r\n                    <ul>\r\n                        {availableRepos.map((repoUrl, index) => (\r\n                            <li key={index}>\r\n                                {repoUrl.split(\"/\").pop().replace(\".git\", \"\")}\r\n                                <button onClick={() => handleCloneRepo(repoUrl)}>\r\n                                    Clone\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button onClick={() => setCloneMenuVisible(false)}>Close</button>\r\n                </div>\r\n            )}\r\n            {!isCloneMenuVisible && (\r\n                <button\r\n                    className=\"clone-repo-button\"\r\n                    onClick={() => setCloneMenuVisible(true)}\r\n                >\r\n                    Clone Repo\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}