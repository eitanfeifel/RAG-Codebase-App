{"ast":null,"code":"import\"bootstrap/dist/css/bootstrap.min.css\";import React,{useState}from\"react\";import\"./ChatWindow.css\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ChatWindow(_ref){let{activeRepo,chatHistory,updateChatHistory}=_ref;const[input,setInput]=useState(\"\");const[loading,setLoading]=useState(false);// For indicating the bot is processing\nconst handleSend=async()=>{if(!input.trim())return;const newMessage={user:\"You\",text:input};// Update chat history with user's message\nupdateChatHistory(newMessage);// Send query to backend with chat history\ntry{const response=await fetch(\"/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({query:input,repo:activeRepo,chat_history:chatHistory// Include chat history\n})});if(response.ok){const data=await response.json();updateChatHistory({user:\"Bot\",text:data.answer});}else{console.error(\"Failed to get a response from the server\");}}catch(error){console.error(\"Error during chat:\",error);}setInput(\"\");// Clear input field\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window border rounded p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages mb-3\",children:[chatHistory.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`alert ${msg.user===\"You\"?\"alert-primary\":\"alert-secondary\"}`,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.user,\": \"]}),\" \",msg.text]},index)),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-secondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bot: \"}),\" Typing...\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:input,onChange:e=>setInput(e.target.value),placeholder:`Ask a question about ${activeRepo}`}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSend,children:\"Send\"})]})]});}export default ChatWindow;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","ChatWindow","_ref","activeRepo","chatHistory","updateChatHistory","input","setInput","loading","setLoading","handleSend","trim","newMessage","user","text","response","fetch","method","headers","body","JSON","stringify","query","repo","chat_history","ok","data","json","answer","console","error","className","children","map","msg","index","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/components/ChatWindow.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatWindow.css\";\r\n\r\nfunction ChatWindow({ activeRepo, chatHistory, updateChatHistory }) {\r\n    const [ input, setInput ] = useState( \"\" );\r\n    const [ loading, setLoading ] = useState( false ); // For indicating the bot is processing\r\n\r\n    const handleSend = async () => {\r\n        if ( !input.trim() ) return;\r\n    \r\n        const newMessage = { user: \"You\", text: input };\r\n    \r\n        // Update chat history with user's message\r\n        updateChatHistory( newMessage );\r\n    \r\n        // Send query to backend with chat history\r\n        try {\r\n            const response = await fetch( \"/chat\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify( {\r\n                    query: input,\r\n                    repo: activeRepo,\r\n                    chat_history: chatHistory, // Include chat history\r\n                } ),\r\n            } );\r\n    \r\n            if ( response.ok ) {\r\n                const data = await response.json();\r\n                updateChatHistory( { user: \"Bot\", text: data.answer } );\r\n            } else {\r\n                console.error( \"Failed to get a response from the server\" );\r\n            }\r\n        } catch ( error ) {\r\n            console.error(\"Error during chat:\", error);\r\n        }\r\n    \r\n        setInput( \"\" ); // Clear input field\r\n    };    \r\n\r\n    return (\r\n        <div className=\"chat-window border rounded p-3\">\r\n            <div className=\"messages mb-3\">\r\n                {chatHistory.map((msg, index) => (\r\n                    <div key={index} className={`alert ${msg.user === \"You\" ? \"alert-primary\" : \"alert-secondary\"}`}>\r\n                        <strong>{msg.user}: </strong> {msg.text}\r\n                    </div>\r\n                ))}\r\n                {loading && (\r\n                    <div className=\"alert alert-secondary\">\r\n                        <strong>Bot: </strong> Typing...\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder={`Ask a question about ${activeRepo}`}\r\n                />\r\n                <button className=\"btn btn-primary\" onClick={handleSend}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}