{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import SideBar from\"../components/SideBar\";import\"./ChatPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(){const[repos,setRepos]=useState([]);const[currentRepo,setCurrentRepo]=useState(null);const[availableRepos,setAvailableRepos]=useState([]);const[isCloneMenuVisible,setCloneMenuVisible]=useState(false);useEffect(()=>{// Fetch available repos when the \"Clone Repo\" button is clicked\nif(isCloneMenuVisible){fetch(\"/repos\").then(response=>response.json()).then(data=>setAvailableRepos(data)).catch(error=>console.error(\"Error fetching repos:\",error));}},[isCloneMenuVisible]);const handleRepoSelect=repo=>{setCurrentRepo(repo);};const handleCloneRepo=async repoUrl=>{try{const response=await fetch(\"/embed\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({repo_url:repoUrl})});if(response.ok){const clonedRepo=repoUrl.split(\"/\").pop().replace(\".git\",\"\");setRepos(prevRepos=>[...prevRepos,clonedRepo]);// Add cloned repo to sidebar\nsetCloneMenuVisible(false);// Hide the clone menu\n}else{console.error(\"Failed to clone repository\");}}catch(error){console.error(\"Error cloning repository:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsx(SideBar,{repos:repos,onRepoSelect:handleRepoSelect}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:currentRepo?/*#__PURE__*/_jsxs(\"h3\",{children:[\"Chat for \",currentRepo]}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a repository to start chatting\"})}),isCloneMenuVisible&&/*#__PURE__*/_jsxs(\"div\",{className:\"clone-menu\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Available Repositories\"}),/*#__PURE__*/_jsx(\"ul\",{children:availableRepos.map((repoUrl,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[repoUrl.split(\"/\").pop().replace(\".git\",\"\"),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCloneRepo(repoUrl),children:\"Clone\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCloneMenuVisible(false),children:\"Close\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"clone-repo-button\",onClick:()=>setCloneMenuVisible(true),children:\"Clone Repo\"})]});}export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","SideBar","jsx","_jsx","jsxs","_jsxs","ChatPage","repos","setRepos","currentRepo","setCurrentRepo","availableRepos","setAvailableRepos","isCloneMenuVisible","setCloneMenuVisible","fetch","then","response","json","data","catch","error","console","handleRepoSelect","repo","handleCloneRepo","repoUrl","method","headers","body","JSON","stringify","repo_url","ok","clonedRepo","split","pop","replace","prevRepos","className","children","onRepoSelect","map","index","onClick"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport \"./ChatPage.css\";\r\n\r\nfunction ChatPage() {\r\n    const [repos, setRepos] = useState([]);\r\n    const [currentRepo, setCurrentRepo] = useState(null);\r\n    const [availableRepos, setAvailableRepos] = useState([]);\r\n    const [isCloneMenuVisible, setCloneMenuVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Fetch available repos when the \"Clone Repo\" button is clicked\r\n        if (isCloneMenuVisible) {\r\n            fetch(\"/repos\")\r\n                .then((response) => response.json())\r\n                .then((data) => setAvailableRepos(data))\r\n                .catch((error) => console.error(\"Error fetching repos:\", error));\r\n        }\r\n    }, [isCloneMenuVisible]);\r\n\r\n    const handleRepoSelect = (repo) => {\r\n        setCurrentRepo(repo);\r\n    };\r\n\r\n    const handleCloneRepo = async (repoUrl) => {\r\n        try {\r\n            const response = await fetch(\"/embed\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ repo_url: repoUrl }),\r\n            });\r\n            if (response.ok) {\r\n                const clonedRepo = repoUrl.split(\"/\").pop().replace(\".git\", \"\");\r\n                setRepos((prevRepos) => [...prevRepos, clonedRepo]); // Add cloned repo to sidebar\r\n                setCloneMenuVisible(false); // Hide the clone menu\r\n            } else {\r\n                console.error(\"Failed to clone repository\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error cloning repository:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-page\">\r\n            <SideBar repos={repos} onRepoSelect={handleRepoSelect} />\r\n            <div className=\"chat-window\">\r\n                {currentRepo ? (\r\n                    <h3>Chat for {currentRepo}</h3>\r\n                ) : (\r\n                    <p>Select a repository to start chatting</p>\r\n                )}\r\n            </div>\r\n            {isCloneMenuVisible && (\r\n                <div className=\"clone-menu\">\r\n                    <h4>Available Repositories</h4>\r\n                    <ul>\r\n                        {availableRepos.map((repoUrl, index) => (\r\n                            <li key={index}>\r\n                                {repoUrl.split(\"/\").pop().replace(\".git\", \"\")}\r\n                                <button onClick={() => handleCloneRepo(repoUrl)}>\r\n                                    Clone\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button onClick={() => setCloneMenuVisible(false)}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            )}\r\n            <button className=\"clone-repo-button\" onClick={() => setCloneMenuVisible(true)}>\r\n                Clone Repo\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}