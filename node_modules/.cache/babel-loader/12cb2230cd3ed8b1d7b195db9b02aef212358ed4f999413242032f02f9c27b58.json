{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Sidebar from\"../components/Sidebar\";import\"./ChatPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatPage(){const[selectedRepo,setSelectedRepo]=useState(null);const[chatHistory,setChatHistory]=useState([]);const[userInput,setUserInput]=useState(\"\");const handleSendMessage=async()=>{if(!selectedRepo||!userInput.trim())return;const response=await fetch(\"/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({repo:selectedRepo,message:userInput})});const data=await response.json();setChatHistory([...chatHistory,{user:userInput,bot:data.response}]);setUserInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatpage\",children:[/*#__PURE__*/_jsx(Sidebar,{selectedRepo:selectedRepo,setSelectedRepo:setSelectedRepo}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-history\",children:chatHistory.map((chat,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"user-message\",children:chat.user}),/*#__PURE__*/_jsx(\"p\",{className:\"bot-message\",children:chat.bot})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Ask something...\",value:userInput,onChange:e=>setUserInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"Send\"})]})]})]});}export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","jsx","_jsx","jsxs","_jsxs","ChatPage","selectedRepo","setSelectedRepo","chatHistory","setChatHistory","userInput","setUserInput","handleSendMessage","trim","response","fetch","method","headers","body","JSON","stringify","repo","message","data","json","user","bot","className","children","map","chat","index","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport \"./ChatPage.css\";\r\n\r\nfunction ChatPage() {\r\n    const [selectedRepo, setSelectedRepo] = useState(null);\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [userInput, setUserInput] = useState(\"\");\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!selectedRepo || !userInput.trim()) return;\r\n\r\n        const response = await fetch(\"/chat\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ repo: selectedRepo, message: userInput }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        setChatHistory([...chatHistory, { user: userInput, bot: data.response }]);\r\n        setUserInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatpage\">\r\n            <Sidebar selectedRepo={selectedRepo} setSelectedRepo={setSelectedRepo} />\r\n            <div className=\"chat-window\">\r\n                <div className=\"chat-history\">\r\n                    {chatHistory.map((chat, index) => (\r\n                        <div key={index}>\r\n                            <p className=\"user-message\">{chat.user}</p>\r\n                            <p className=\"bot-message\">{chat.bot}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Ask something...\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                    />\r\n                    <button onClick={handleSendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAChB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAc,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAACN,YAAY,EAAI,CAACI,SAAS,CAACG,IAAI,CAAC,CAAC,CAAE,OAExC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,OAAO,CAAE,CAClCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,IAAI,CAAEf,YAAY,CAAEgB,OAAO,CAAEZ,SAAU,CAAC,CACnE,CAAC,CAAC,CAEF,KAAM,CAAAa,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClCf,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAE,CAAEiB,IAAI,CAAEf,SAAS,CAAEgB,GAAG,CAAEH,IAAI,CAACT,QAAS,CAAC,CAAC,CAAC,CACzEH,YAAY,CAAC,EAAE,CAAC,CACpB,CAAC,CAED,mBACIP,KAAA,QAAKuB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB1B,IAAA,CAACF,OAAO,EAACM,YAAY,CAAEA,YAAa,CAACC,eAAe,CAAEA,eAAgB,CAAE,CAAC,cACzEH,KAAA,QAAKuB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxB1B,IAAA,QAAKyB,SAAS,CAAC,cAAc,CAAAC,QAAA,CACxBpB,WAAW,CAACqB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACzB3B,KAAA,QAAAwB,QAAA,eACI1B,IAAA,MAAGyB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEE,IAAI,CAACL,IAAI,CAAI,CAAC,cAC3CvB,IAAA,MAAGyB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEE,IAAI,CAACJ,GAAG,CAAI,CAAC,GAFnCK,KAGL,CACR,CAAC,CACD,CAAC,cACN3B,KAAA,QAAKuB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB1B,IAAA,UACI8B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,kBAAkB,CAC9BC,KAAK,CAAExB,SAAU,CACjByB,QAAQ,CAAGC,CAAC,EAAKzB,YAAY,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACjD,CAAC,cACFhC,IAAA,WAAQoC,OAAO,CAAE1B,iBAAkB,CAAAgB,QAAA,CAAC,MAAI,CAAQ,CAAC,EAChD,CAAC,EACL,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAvB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}