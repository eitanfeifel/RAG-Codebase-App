{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function HomePage(_ref){let{isAuthenticated}=_ref;const[isLoading,setIsLoading]=useState(false);const navigate=useNavigate();const handleCloneRepos=async()=>{setIsLoading(true);try{const response=await fetch(\"/clone-repos\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({repos:[\"repo1.git\",\"repo2.git\"]})// Replace with actual selected repos\n});if(response.ok){const reposData=await response.json();setIsLoading(false);navigate(\"/chat\");}else{console.error(\"Failed to clone repositories.\");setIsLoading(false);}}catch(error){console.error(\"Error cloning repositories:\",error);setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"homepage\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to RAG Codebase App\"}),!isAuthenticated?/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.href=\"/oauth/github\",children:\"Connect with GitHub\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleCloneRepos,children:isLoading?\"Cloning...\":\"Clone Repositories\"})]});}export default HomePage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","HomePage","_ref","isAuthenticated","isLoading","setIsLoading","navigate","handleCloneRepos","response","fetch","method","headers","body","JSON","stringify","repos","ok","reposData","json","console","error","className","children","onClick","window","location","href"],"sources":["C:/Users/eitan/OneDrive/Documents/HEADSTARTER/PROJ/4/codebase_rag/app/src/HomePage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction HomePage({ isAuthenticated }) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleCloneRepos = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\"/clone-repos\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ repos: [\"repo1.git\", \"repo2.git\"] }), // Replace with actual selected repos\r\n            });\r\n\r\n            if (response.ok) {\r\n                const reposData = await response.json();\r\n                setIsLoading(false);\r\n                navigate(\"/chat\");\r\n            } else {\r\n                console.error(\"Failed to clone repositories.\");\r\n                setIsLoading(false);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error cloning repositories:\", error);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <h1>Welcome to RAG Codebase App</h1>\r\n            {!isAuthenticated ? (\r\n                <button onClick={() => (window.location.href = \"/oauth/github\")}>\r\n                    Connect with GitHub\r\n                </button>\r\n            ) : (\r\n                <button onClick={handleCloneRepos}>\r\n                    {isLoading ? \"Cloning...\" : \"Clone Repositories\"}\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAsB,IAArB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjCF,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CACzCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAE,CAAC,WAAW,CAAE,WAAW,CAAE,CAAC,CAAG;AACjE,CAAC,CAAC,CAEF,GAAIP,QAAQ,CAACQ,EAAE,CAAE,CACb,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvCb,YAAY,CAAC,KAAK,CAAC,CACnBC,QAAQ,CAAC,OAAO,CAAC,CACrB,CAAC,IAAM,CACHa,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC,CAC9Cf,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAE,MAAOe,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDf,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,mBACIL,KAAA,QAAKqB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrBxB,IAAA,OAAAwB,QAAA,CAAI,6BAA2B,CAAI,CAAC,CACnC,CAACnB,eAAe,cACbL,IAAA,WAAQyB,OAAO,CAAEA,CAAA,GAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,eAAiB,CAAAJ,QAAA,CAAC,qBAEjE,CAAQ,CAAC,cAETxB,IAAA,WAAQyB,OAAO,CAAEhB,gBAAiB,CAAAe,QAAA,CAC7BlB,SAAS,CAAG,YAAY,CAAG,oBAAoB,CAC5C,CACX,EACA,CAAC,CAEd,CAEA,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}